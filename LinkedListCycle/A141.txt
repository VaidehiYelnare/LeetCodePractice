/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public bool HasCycle(ListNode head) 
    {
        if(head == null || head.next == null)
            return false; 
         ListNode firstNode = head;
         ListNode secondNode = head.next;
         while(firstNode != secondNode)
         {
            if(firstNode == null || secondNode == null || 
               secondNode.next == null || firstNode.next == null)
                return false;
            else
            {
                firstNode = firstNode.next;
                secondNode = secondNode.next.next; 
            }
         }        
        return true;
    }
}