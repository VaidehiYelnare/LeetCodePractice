/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsEvenOddTree(TreeNode root) {
       bool even = true;
       Queue<TreeNode> node = new Queue<TreeNode>();
       node.Enqueue(root);
       int size = 0;
        while(node.Count > 0){
            size = node.Count;
            int prev = -1;
            while(size > 0){
                var cur = node.Dequeue();
                if(!even){
                    if(cur.val%2 == 1 || (cur.val >= prev && prev != -1))
                        return false;
                }
                if(even){
                    if(cur.val%2==0 || cur.val<=prev)
                        return false;
                }
                if(cur.left != null)
                    node.Enqueue(cur.left);
                if(cur.right != null)
                    node.Enqueue(cur.right);
                prev = cur.val;
                size--;
            }
            even = !even;
        }
        return true;
    }
}